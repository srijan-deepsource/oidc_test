name: Run Tests and Report Coverage

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      id-token: write # Required to fetch the OIDC token
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0 # Fetch all history for all branches and tags

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x' # Specify your Python version

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.x' # Specify your Go version, e.g., '1.20', '1.21', or '1.x' for latest stable

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov

        echo "Installing make..."
        sudo apt-get update && sudo apt-get install -y make

        echo "Cloning Deepsource CLI repository..."
        # Using HTTPS for easier CI access; ensure the branch 'eng-2483' exists
        git clone --branch eng-2483 --depth 1 https://github.com/DeepSourceCorp/cli.git deepsource_cli

        echo "Building Deepsource CLI..."
        cd deepsource_cli
        make build_local

        echo "Installing Deepsource CLI binary..."
        # Binary is created at /tmp/deepsource by 'make build_local'
        sudo cp /tmp/deepsource /usr/local/bin/deepsource
        cd .. # Return to the original working directory

        echo "Verifying Deepsource CLI installation..."
        deepsource --version

    - name: Run tests with coverage
      run: |
        pytest --cov=./ --cov-report=xml test_app.py
        # Assuming test_app.py is at the root and you want coverage for the current directory.
        # Adjust --cov=./ path if your source code is in a subdirectory e.g. --cov=src
        # The coverage report will be generated as coverage.xml by default

    - name: Report coverage to Deepsource
      run: |
        deepsource report --use-oidc --analyzer test-coverage --key python --value-file ./coverage.xml
